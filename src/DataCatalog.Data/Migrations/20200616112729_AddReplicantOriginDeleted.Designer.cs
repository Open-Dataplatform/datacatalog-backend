// <auto-generated />
using System;
using DataCatalog.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace DataCatalog.Data.Migrations
{
    [DbContext(typeof(DataCatalogContext))]
    [Migration("20200616112729_AddReplicantOriginDeleted")]
    partial class AddReplicantOriginDeleted
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "3.1.4")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("DataCatalog.Data.Model.Category", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Colour")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasDefaultValueSql("getutcdate()");

                    b.Property<string>("ImageUri")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("ModifiedDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasDefaultValueSql("getutcdate()");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("OriginDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("OriginEnvironment")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Version")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("Category");

                    b.HasData(
                        new
                        {
                            Id = new Guid("8713b259-0294-480a-960c-08a9c9983961"),
                            Colour = "#2A939B",
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ModifiedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Ancillary Services",
                            OriginDeleted = false,
                            OriginEnvironment = "prod",
                            Version = 0
                        },
                        new
                        {
                            Id = new Guid("b94863a9-685a-44d6-aae4-2cfb3a63c489"),
                            Colour = "#389B88",
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ModifiedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Auctions, Transmission Capacity",
                            OriginDeleted = false,
                            OriginEnvironment = "prod",
                            Version = 0
                        },
                        new
                        {
                            Id = new Guid("e5b2f760-e965-452f-b0ab-70ca506d4c20"),
                            Colour = "#452A9B",
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ModifiedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Emissions",
                            OriginDeleted = false,
                            OriginEnvironment = "prod",
                            Version = 0
                        },
                        new
                        {
                            Id = new Guid("08e58f12-51bf-4af9-af3a-02022cab77c7"),
                            Colour = "#2A9B65",
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ModifiedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Day Ahead Market",
                            OriginDeleted = false,
                            OriginEnvironment = "prod",
                            Version = 0
                        },
                        new
                        {
                            Id = new Guid("23ab1cd5-ae16-4aa4-bab7-25380c1634d5"),
                            Colour = "#B27736",
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ModifiedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Electric Boilers",
                            OriginDeleted = false,
                            OriginEnvironment = "prod",
                            Version = 0
                        },
                        new
                        {
                            Id = new Guid("8a95d290-417e-4a53-a807-a13293f3117d"),
                            Colour = "#F8AE3C",
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ModifiedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Gas",
                            OriginDeleted = false,
                            OriginEnvironment = "prod",
                            Version = 0
                        },
                        new
                        {
                            Id = new Guid("5873b2e5-5db1-42db-bf25-83fd9dded293"),
                            Colour = "#663BCC",
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ModifiedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Production and Consumption",
                            OriginDeleted = false,
                            OriginEnvironment = "prod",
                            Version = 0
                        },
                        new
                        {
                            Id = new Guid("084e6353-82a8-4f99-b9f3-b247081c34c8"),
                            Colour = "#A0C1C2",
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ModifiedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Electricity Consumption",
                            OriginDeleted = false,
                            OriginEnvironment = "prod",
                            Version = 0
                        },
                        new
                        {
                            Id = new Guid("5b39fbdd-76c5-44df-9f7d-d314db760fc1"),
                            Colour = "#819B38",
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ModifiedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Intra Day Market",
                            OriginDeleted = false,
                            OriginEnvironment = "prod",
                            Version = 0
                        },
                        new
                        {
                            Id = new Guid("a90abc39-c2de-4c29-a9f8-4e10f41a50f0"),
                            Colour = "#293A4C",
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ModifiedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Electricity Production",
                            OriginDeleted = false,
                            OriginEnvironment = "prod",
                            Version = 0
                        },
                        new
                        {
                            Id = new Guid("9ac5af8d-4165-448a-ace5-2edcf0c3e202"),
                            Colour = "#548E80",
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ModifiedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Regulating Power",
                            OriginDeleted = false,
                            OriginEnvironment = "prod",
                            Version = 0
                        },
                        new
                        {
                            Id = new Guid("7434d8a3-7ebb-4212-967c-061d5a2666d7"),
                            Colour = "#7D8E1C",
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ModifiedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Whole Sale Market",
                            OriginDeleted = false,
                            OriginEnvironment = "prod",
                            Version = 0
                        },
                        new
                        {
                            Id = new Guid("90909fcd-4a5a-455a-a543-9c2c8a45e453"),
                            Colour = "#398C22",
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ModifiedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Reserves",
                            OriginDeleted = false,
                            OriginEnvironment = "prod",
                            Version = 0
                        },
                        new
                        {
                            Id = new Guid("d6944781-c069-4c14-859f-07865164763f"),
                            Colour = "#FFD424",
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ModifiedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Solar Power",
                            OriginDeleted = false,
                            OriginEnvironment = "prod",
                            Version = 0
                        },
                        new
                        {
                            Id = new Guid("b4cef11a-d0f4-4c33-9796-b80ea6d2489a"),
                            Colour = "#547B8E",
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ModifiedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Transmission Lines",
                            OriginDeleted = false,
                            OriginEnvironment = "prod",
                            Version = 0
                        },
                        new
                        {
                            Id = new Guid("418e657d-3efb-4a30-ad3f-3f95a6ab8888"),
                            Colour = "#C2E4F0",
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ModifiedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Wind Power",
                            OriginDeleted = false,
                            OriginEnvironment = "prod",
                            Version = 0
                        });
                });

            modelBuilder.Entity("DataCatalog.Data.Model.DataContract", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasDefaultValueSql("getutcdate()");

                    b.Property<Guid>("DataSourceId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("DatasetId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("ModifiedDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasDefaultValueSql("getutcdate()");

                    b.Property<bool>("OriginDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("OriginEnvironment")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Version")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("DataSourceId");

                    b.HasIndex("DatasetId");

                    b.ToTable("DataContract");
                });

            modelBuilder.Entity("DataCatalog.Data.Model.DataField", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasDefaultValueSql("getutcdate()");

                    b.Property<Guid>("DatasetId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Format")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("ModifiedDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasDefaultValueSql("getutcdate()");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Type")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Validation")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("DatasetId");

                    b.ToTable("DataField");
                });

            modelBuilder.Entity("DataCatalog.Data.Model.DataSource", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("ContactInfo")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasDefaultValueSql("getutcdate()");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("ModifiedDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasDefaultValueSql("getutcdate()");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("OriginDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("OriginEnvironment")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("SourceType")
                        .HasColumnType("int");

                    b.Property<int>("Version")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("DataSource");

                    b.HasData(
                        new
                        {
                            Id = new Guid("14c7e740-6104-4036-af76-73891fdf0033"),
                            ContactInfo = "dataplatform@energinet.dk",
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "Use for any dataset that originates from within the data platform itself",
                            ModifiedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "DataPlatform",
                            OriginDeleted = false,
                            OriginEnvironment = "prod",
                            SourceType = 0,
                            Version = 0
                        },
                        new
                        {
                            Id = new Guid("3db55181-4eee-4601-9d52-8aa69e2562ab"),
                            ContactInfo = "dps@energinet.dk",
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "Energinet system DPS",
                            ModifiedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "DPS",
                            OriginDeleted = false,
                            OriginEnvironment = "prod",
                            SourceType = 1,
                            Version = 0
                        },
                        new
                        {
                            Id = new Guid("43a95e77-79e6-4da1-a4ea-2d64f3587b32"),
                            ContactInfo = "propel@energinet.dk",
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "Energinet system Propel",
                            ModifiedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Propel",
                            OriginDeleted = false,
                            OriginEnvironment = "prod",
                            SourceType = 1,
                            Version = 0
                        },
                        new
                        {
                            Id = new Guid("44bbd193-dd57-4221-89ac-80e3509a0c73"),
                            ContactInfo = "neptun@energinet.dk",
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "Energinet system Neptun",
                            ModifiedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Neptun",
                            OriginDeleted = false,
                            OriginEnvironment = "prod",
                            SourceType = 1,
                            Version = 0
                        },
                        new
                        {
                            Id = new Guid("bec46f78-9ef7-49f1-b98b-748f85aa823b"),
                            ContactInfo = "dmi.dk/kontakt",
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "Danish Meteorological Institute",
                            ModifiedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "DMI",
                            OriginDeleted = false,
                            OriginEnvironment = "prod",
                            SourceType = 2,
                            Version = 0
                        });
                });

            modelBuilder.Entity("DataCatalog.Data.Model.Dataset", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("Confidentiality")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValue(0);

                    b.Property<Guid>("ContactId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasDefaultValueSql("getutcdate()");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("HierarchyId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasDefaultValue(new Guid("668f1737-5501-4db5-a072-c2fa37ef26d0"));

                    b.Property<string>("Location")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("ModifiedDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasDefaultValueSql("getutcdate()");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("OriginDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("OriginEnvironment")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Owner")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("RefinementLevel")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValue(0);

                    b.Property<string>("SlaDescription")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SlaLink")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("SourceId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasDefaultValue(new Guid("5777efb5-f55c-4f16-bb83-0125b810f995"));

                    b.Property<int>("Status")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValue(0);

                    b.Property<int>("Version")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValue(1);

                    b.HasKey("Id");

                    b.HasIndex("ContactId");

                    b.HasIndex("HierarchyId");

                    b.ToTable("Dataset");
                });

            modelBuilder.Entity("DataCatalog.Data.Model.DatasetCategory", b =>
                {
                    b.Property<Guid>("DatasetId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("CategoryId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasDefaultValueSql("getutcdate()");

                    b.HasKey("DatasetId", "CategoryId");

                    b.HasIndex("CategoryId");

                    b.ToTable("DatasetCategory");
                });

            modelBuilder.Entity("DataCatalog.Data.Model.DatasetChangeLog", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasDefaultValueSql("getutcdate()");

                    b.Property<Guid>("DatasetId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("MemberId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("DatasetId");

                    b.HasIndex("MemberId");

                    b.ToTable("DatasetChangeLog");
                });

            modelBuilder.Entity("DataCatalog.Data.Model.DatasetDuration", b =>
                {
                    b.Property<Guid>("DatasetId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("DurationId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("DurationType")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreatedDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasDefaultValueSql("getutcdate()");

                    b.HasKey("DatasetId", "DurationId", "DurationType");

                    b.HasIndex("DurationId");

                    b.ToTable("DatasetDuration");
                });

            modelBuilder.Entity("DataCatalog.Data.Model.DatasetGroup", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasDefaultValueSql("getutcdate()");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("MemberId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("ModifiedDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasDefaultValueSql("getutcdate()");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("MemberId");

                    b.ToTable("DatasetGroup");
                });

            modelBuilder.Entity("DataCatalog.Data.Model.DatasetGroupDataset", b =>
                {
                    b.Property<Guid>("DatasetGroupId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("DatasetId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasDefaultValueSql("getutcdate()");

                    b.HasKey("DatasetGroupId", "DatasetId");

                    b.HasIndex("DatasetId");

                    b.ToTable("DatasetGroupDataset");
                });

            modelBuilder.Entity("DataCatalog.Data.Model.Duration", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Code")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasDefaultValueSql("getutcdate()");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("ModifiedDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasDefaultValueSql("getutcdate()");

                    b.HasKey("Id");

                    b.ToTable("Duration");

                    b.HasData(
                        new
                        {
                            Id = new Guid("f745f308-1542-4a7a-975f-0cd6f1e73668"),
                            Code = "PT1H",
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "1 hour",
                            ModifiedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = new Guid("2ff90ae1-27a8-4cb8-a697-6e81a5e36fb0"),
                            Code = "P1Y",
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "1 year",
                            ModifiedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = new Guid("6817a5e6-7c80-470f-a1b2-fa79ed3c125d"),
                            Code = "P1M",
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "1 month",
                            ModifiedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = new Guid("c70a3773-3473-4074-8c08-4a1bfffaa1d1"),
                            Code = "P7D",
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "7 days",
                            ModifiedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = new Guid("20986017-c3a8-41a0-8221-b5e1a5995c05"),
                            Code = "P1D",
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "1 day",
                            ModifiedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = new Guid("2b3d0756-0817-4281-a2ca-76c2b0eb90d6"),
                            Code = "PT12H",
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "12 hours",
                            ModifiedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = new Guid("984b1eb4-0420-4354-8ae7-a9b6c9c33aa8"),
                            Code = "PT6H",
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "6 hours",
                            ModifiedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = new Guid("2fb37506-3252-4065-a81b-5c633e158a7c"),
                            Code = "PT15M",
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "15 minutes",
                            ModifiedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = new Guid("b64a8a70-cb40-4117-93ba-093571ea4aeb"),
                            Code = "PT5M",
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "5 minutes",
                            ModifiedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = new Guid("d05a8570-6155-41bd-95b1-20e6f2856cc2"),
                            Code = "PT3M",
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "3 minutes",
                            ModifiedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = new Guid("b57f0531-0eb0-4bc2-b81c-266a3f52368e"),
                            Code = "PT1M",
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "1 minute",
                            ModifiedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        });
                });

            modelBuilder.Entity("DataCatalog.Data.Model.Hierarchy", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasDefaultValueSql("getutcdate()");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("ModifiedDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasDefaultValueSql("getutcdate()");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid?>("ParentHierarchyId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("ParentHierarchyId");

                    b.ToTable("Hierarchy");

                    b.HasData(
                        new
                        {
                            Id = new Guid("668f1737-5501-4db5-a072-c2fa37ef26d0"),
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "Anything mainly related to electricity",
                            ModifiedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Electricity"
                        },
                        new
                        {
                            Id = new Guid("ad240fb2-ca95-4ec0-9bc2-58c73bc4ac31"),
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "Electricity consumption",
                            ModifiedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Consumption",
                            ParentHierarchyId = new Guid("668f1737-5501-4db5-a072-c2fa37ef26d0")
                        },
                        new
                        {
                            Id = new Guid("276af4b1-72ea-4654-8ce3-37e73b2657c0"),
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "Electricity production",
                            ModifiedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Production",
                            ParentHierarchyId = new Guid("668f1737-5501-4db5-a072-c2fa37ef26d0")
                        },
                        new
                        {
                            Id = new Guid("a9a780d7-8f2c-4d86-b863-1327bd264575"),
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "Electricity consumption and production",
                            ModifiedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Consumption and Production",
                            ParentHierarchyId = new Guid("668f1737-5501-4db5-a072-c2fa37ef26d0")
                        },
                        new
                        {
                            Id = new Guid("ecce1213-9886-4361-bbc2-12ca79138f0e"),
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "Electricity reserves",
                            ModifiedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Reserves",
                            ParentHierarchyId = new Guid("668f1737-5501-4db5-a072-c2fa37ef26d0")
                        },
                        new
                        {
                            Id = new Guid("a6b40fdf-9831-49ec-87b0-cfed8f447577"),
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "Electricity ancillary services",
                            ModifiedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Ancillary Services",
                            ParentHierarchyId = new Guid("668f1737-5501-4db5-a072-c2fa37ef26d0")
                        },
                        new
                        {
                            Id = new Guid("5f2d33fc-decc-4061-af3c-5d58e65bbc9c"),
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "Electricity CO2 Emissions",
                            ModifiedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "CO2 Emissions",
                            ParentHierarchyId = new Guid("668f1737-5501-4db5-a072-c2fa37ef26d0")
                        },
                        new
                        {
                            Id = new Guid("d27b19d3-e589-4f98-809a-351a062635e8"),
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "Electricity regulating power",
                            ModifiedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Regulating Power",
                            ParentHierarchyId = new Guid("668f1737-5501-4db5-a072-c2fa37ef26d0")
                        },
                        new
                        {
                            Id = new Guid("fb668c70-219c-4edf-b31a-7ad36ee43d88"),
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "Electricity solar power",
                            ModifiedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Solar Power",
                            ParentHierarchyId = new Guid("668f1737-5501-4db5-a072-c2fa37ef26d0")
                        },
                        new
                        {
                            Id = new Guid("ded03663-ec2e-445f-b897-b5b78c00f2d4"),
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "Electricity wind power",
                            ModifiedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Wind Power",
                            ParentHierarchyId = new Guid("668f1737-5501-4db5-a072-c2fa37ef26d0")
                        },
                        new
                        {
                            Id = new Guid("c5dfc671-dcb3-4f10-bf11-758c1d3e97be"),
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "Electricity capacities",
                            ModifiedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Capacities",
                            ParentHierarchyId = new Guid("668f1737-5501-4db5-a072-c2fa37ef26d0")
                        },
                        new
                        {
                            Id = new Guid("fc20e468-5ab4-48db-8a0b-09e86935c3aa"),
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "Electricity forecasts",
                            ModifiedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Forecasts",
                            ParentHierarchyId = new Guid("668f1737-5501-4db5-a072-c2fa37ef26d0")
                        },
                        new
                        {
                            Id = new Guid("586c321c-3f01-4cd2-8228-000670114e32"),
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "Anything mainly related to gas",
                            ModifiedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Gas"
                        },
                        new
                        {
                            Id = new Guid("5b22fc05-6837-40f4-a8a2-184e9aa25aff"),
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "Gas consumption",
                            ModifiedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Consumption",
                            ParentHierarchyId = new Guid("586c321c-3f01-4cd2-8228-000670114e32")
                        },
                        new
                        {
                            Id = new Guid("49ca837b-79ba-4a4f-bbc5-e01a8f23befd"),
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "Gas Production",
                            ModifiedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Production",
                            ParentHierarchyId = new Guid("586c321c-3f01-4cd2-8228-000670114e32")
                        },
                        new
                        {
                            Id = new Guid("7330f2ef-f86f-4b7d-8592-e7c56ef52d15"),
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "Gas consumption and production",
                            ModifiedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Consumption and Production",
                            ParentHierarchyId = new Guid("586c321c-3f01-4cd2-8228-000670114e32")
                        },
                        new
                        {
                            Id = new Guid("334740dd-7158-475d-84e9-c8e83403b515"),
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "Gas storage",
                            ModifiedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Storage",
                            ParentHierarchyId = new Guid("586c321c-3f01-4cd2-8228-000670114e32")
                        },
                        new
                        {
                            Id = new Guid("1653a169-9548-46f6-aa47-ea9a90088b0f"),
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "Gas CO2 Emissions",
                            ModifiedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "CO2 Emissions",
                            ParentHierarchyId = new Guid("586c321c-3f01-4cd2-8228-000670114e32")
                        },
                        new
                        {
                            Id = new Guid("596203b3-743a-4482-8b20-f4bc6eb844b6"),
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "Anything mainly related to weather",
                            ModifiedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Weather"
                        },
                        new
                        {
                            Id = new Guid("a8adde4d-4dc9-4028-8993-0ef9bc153d7d"),
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "Weather forecasts",
                            ModifiedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Forecasts",
                            ParentHierarchyId = new Guid("596203b3-743a-4482-8b20-f4bc6eb844b6")
                        },
                        new
                        {
                            Id = new Guid("077a87f9-1842-40b4-b132-1c966b41d761"),
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "Weather historical data",
                            ModifiedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Historical Data",
                            ParentHierarchyId = new Guid("596203b3-743a-4482-8b20-f4bc6eb844b6")
                        });
                });

            modelBuilder.Entity("DataCatalog.Data.Model.Member", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasDefaultValueSql("getutcdate()");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("MemberRole")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValue(2);

                    b.Property<DateTime>("ModifiedDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasDefaultValueSql("getutcdate()");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Password")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Member");
                });

            modelBuilder.Entity("DataCatalog.Data.Model.MemberGroup", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasDefaultValueSql("getutcdate()");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("ModifiedDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasDefaultValueSql("getutcdate()");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("MemberGroup");
                });

            modelBuilder.Entity("DataCatalog.Data.Model.MemberGroupMember", b =>
                {
                    b.Property<Guid>("MemberGroupId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("MemberId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasDefaultValueSql("getutcdate()");

                    b.HasKey("MemberGroupId", "MemberId");

                    b.HasIndex("MemberId");

                    b.ToTable("MemberGroupMember");
                });

            modelBuilder.Entity("DataCatalog.Data.Model.Transformation", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasDefaultValueSql("getutcdate()");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("ModifiedDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasDefaultValueSql("getutcdate()");

                    b.Property<string>("ShortDescription")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Transformation");
                });

            modelBuilder.Entity("DataCatalog.Data.Model.TransformationDataset", b =>
                {
                    b.Property<Guid>("DatasetId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("TransformationId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasDefaultValueSql("getutcdate()");

                    b.Property<int>("TransformationDirection")
                        .HasColumnType("int");

                    b.HasKey("DatasetId", "TransformationId");

                    b.HasIndex("TransformationId");

                    b.ToTable("TransformationDataset");
                });

            modelBuilder.Entity("DataCatalog.Data.Model.DataContract", b =>
                {
                    b.HasOne("DataCatalog.Data.Model.DataSource", "DataSource")
                        .WithMany("DataContracts")
                        .HasForeignKey("DataSourceId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("DataCatalog.Data.Model.Dataset", "Dataset")
                        .WithMany("DataContracts")
                        .HasForeignKey("DatasetId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("DataCatalog.Data.Model.DataField", b =>
                {
                    b.HasOne("DataCatalog.Data.Model.Dataset", "Dataset")
                        .WithMany("DataFields")
                        .HasForeignKey("DatasetId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("DataCatalog.Data.Model.Dataset", b =>
                {
                    b.HasOne("DataCatalog.Data.Model.MemberGroup", "Contact")
                        .WithMany("Datasets")
                        .HasForeignKey("ContactId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("DataCatalog.Data.Model.Hierarchy", "Hierarchy")
                        .WithMany("Datasets")
                        .HasForeignKey("HierarchyId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("DataCatalog.Data.Model.DatasetCategory", b =>
                {
                    b.HasOne("DataCatalog.Data.Model.Category", "Category")
                        .WithMany("DatasetCategories")
                        .HasForeignKey("CategoryId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("DataCatalog.Data.Model.Dataset", "Dataset")
                        .WithMany("DatasetCategories")
                        .HasForeignKey("DatasetId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("DataCatalog.Data.Model.DatasetChangeLog", b =>
                {
                    b.HasOne("DataCatalog.Data.Model.Dataset", "Dataset")
                        .WithMany("DatasetChangeLogs")
                        .HasForeignKey("DatasetId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("DataCatalog.Data.Model.Member", "Member")
                        .WithMany("DatasetChangeLogs")
                        .HasForeignKey("MemberId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("DataCatalog.Data.Model.DatasetDuration", b =>
                {
                    b.HasOne("DataCatalog.Data.Model.Dataset", "Dataset")
                        .WithMany("DatasetDurations")
                        .HasForeignKey("DatasetId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("DataCatalog.Data.Model.Duration", "Duration")
                        .WithMany("DatasetsDurations")
                        .HasForeignKey("DurationId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("DataCatalog.Data.Model.DatasetGroup", b =>
                {
                    b.HasOne("DataCatalog.Data.Model.Member", "Member")
                        .WithMany()
                        .HasForeignKey("MemberId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("DataCatalog.Data.Model.DatasetGroupDataset", b =>
                {
                    b.HasOne("DataCatalog.Data.Model.DatasetGroup", "DatasetGroup")
                        .WithMany("DatasetGroupDatasets")
                        .HasForeignKey("DatasetGroupId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("DataCatalog.Data.Model.Dataset", "Dataset")
                        .WithMany()
                        .HasForeignKey("DatasetId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("DataCatalog.Data.Model.Hierarchy", b =>
                {
                    b.HasOne("DataCatalog.Data.Model.Hierarchy", "ParentHierarchy")
                        .WithMany("ChildHierarchies")
                        .HasForeignKey("ParentHierarchyId");
                });

            modelBuilder.Entity("DataCatalog.Data.Model.MemberGroupMember", b =>
                {
                    b.HasOne("DataCatalog.Data.Model.MemberGroup", "MemberGroup")
                        .WithMany("MemberGroupMembers")
                        .HasForeignKey("MemberGroupId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("DataCatalog.Data.Model.Member", "Member")
                        .WithMany("MemberGroupMembers")
                        .HasForeignKey("MemberId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("DataCatalog.Data.Model.TransformationDataset", b =>
                {
                    b.HasOne("DataCatalog.Data.Model.Dataset", "Dataset")
                        .WithMany("TransformationDatasets")
                        .HasForeignKey("DatasetId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("DataCatalog.Data.Model.Transformation", "Transformation")
                        .WithMany("TransformationDatasets")
                        .HasForeignKey("TransformationId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
