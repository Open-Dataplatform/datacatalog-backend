apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "datacatalog-backend.fullname" . }}
  labels:
    {{- include "datacatalog-backend.labels" . | nindent 4 }}
spec:
  {{- if not .Values.apiDeployment.autoscaling.enabled }}
  replicas: {{ .Values.apiDeployment.replicaCount }}
  {{- end }}
  selector:
    matchLabels:
      {{- include "datacatalog-backend.selectorLabels" . | nindent 6 }}
  template:
    metadata:
      annotations:
        vault.hashicorp.com/agent-inject: "true"
        vault.hashicorp.com/role: "{{ .Values.secretName }}-reader"
        vault.hashicorp.com/auth-path: "auth/kubernetes-{{ .Values.environment }}"
        vault.hashicorp.com/agent-inject-secret-appsettings.secrets.json: "{{ .Values.secretName }}/data/credentials"
        vault.hashicorp.com/agent-inject-template-appsettings.secrets.json: |
          {{`{{-`}} with secret "{{ .Values.secretName }}/data/credentials" {{`-}}`}}
          {{`{
            "GroupManagementClientId": "{{ .Data.data.group_management_client_id }}",
            "GroupManagementClientSecret": "{{ .Data.data.group_management_client_secret }}",
            "DataLakeClientId": "{{ .Data.data.data_lake_client_id }}",
            "DataLakeClientSecret": "{{ .Data.data.data_lake_client_secret }}",
            "ConnectionStrings": {
              "DataCatalog": "{{ .Data.data.connection_string }}"
            },
            "AzureAd": {
              "TenantId": "{{ .Data.data.tenant_id }}"
            }
          }
          {{- end -}}`}}
      {{- with .Values.apiDeployment.annotations }}
        {{- toYaml . | nindent 8 }}
      {{- end }}
      labels:
        {{- include "datacatalog-backend.selectorLabels" . | nindent 8 }}
    spec:
      {{- with .Values.apiDeployment.imagePullSecrets }}
      imagePullSecrets:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.apiDeployment.volumes }}
      volumes:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      securityContext:
        {{- toYaml .Values.apiDeployment.podSecurityContext | nindent 8 }}
      containers:
        - name: {{ .Chart.Name }}
          securityContext:
            {{- toYaml .Values.apiDeployment.securityContext | nindent 12 }}
          image: "{{ .Values.apiDeployment.image.repository }}:{{ .Values.apiDeployment.image.tag | default .Chart.AppVersion }}"
          imagePullPolicy: {{ .Values.apiDeployment.image.pullPolicy }}
          env:
          {{ range $k, $v := .Values.apiDeployment.env }}
            - name: {{ $k | quote }}
              value: {{ $v | quote }}
          {{- end }}
          {{- with .Values.apiDeployment.volumeMounts }}
          volumeMounts:
            {{- toYaml . | nindent 10 }}
          {{- end }}
          ports:
            - name: http
              containerPort: 80
              protocol: TCP
          livenessProbe:
            httpGet:
              path: {{ .Values.apiDeployment.livenessProbe.path }}
              port: http
            initialDelaySeconds: {{ .Values.apiDeployment.livenessProbe.initialDelaySeconds }}
            timeoutSeconds: {{ .Values.apiDeployment.livenessProbe.timeoutSeconds }}
            periodSeconds: {{ .Values.apiDeployment.livenessProbe.periodSeconds }}
          resources:
            {{- toYaml .Values.apiDeployment.resources | nindent 12 }}
      {{- with .Values.apiDeployment.nodeSelector }}
      nodeSelector:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.apiDeployment.affinity }}
      affinity:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.apiDeployment.tolerations }}
      tolerations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
